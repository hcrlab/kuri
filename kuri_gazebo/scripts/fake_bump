#!/usr/bin/env python
import rospy
import struct
from sensor_msgs.msg import PointCloud2, PointField
import numpy as np

def make_cloud(frame_id, stamp, points):
    '''
    Creates a sensor_msgs/PointCloud2 message from the specified points.
    '''
    msg = PointCloud2()

    # Fill in metadata
    msg.header.stamp = rospy.Time.now()
    msg.header.frame_id = 'base_link'
    msg.height = 1
    msg.width = len(points)
    offset = 0
    for dim_name in ['x', 'y', 'z']:
        pf = PointField()
        pf.name = dim_name
        pf.offset = offset
        pf.datatype = pf.FLOAT32
        pf.count = 1
        msg.fields.append(pf)
        offset += 4
    msg.is_bigendian = False
    msg.point_step = 4*3
    msg.is_dense = False

    # Encode the points
    for (x, y, z) in points:
        msg.data += struct.pack('fff', x, y, z)
    return msg

rospy.init_node('fake_bump', anonymous=True)
pub = rospy.Publisher('mobile_base/sensors/bumper_cloud', PointCloud2, queue_size=10)
rospy.sleep(0.4) # wait for other nodes to connect

points = []
for x in np.arange(-1.0, 1.0, 0.4):
    for y in np.arange(-1.0, 1.0, 0.4):
        points.append((x, y, 0.0))

r = rospy.Rate(20)
while not rospy.is_shutdown():
    pub.publish(make_cloud('base_link', rospy.Time.now(), []))
    r.sleep()


